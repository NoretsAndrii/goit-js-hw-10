{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst btn = document.querySelector('button');\nconst input = document.querySelector('input');\nconst daysTimer = document.querySelector('[data-days]');\nconst secondTimer = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onChange(selectedDates) {\n    const data = new Date(selectedDates[0]);\n    if (data.getTime() <= Date.now()) {\n      btn.setAttribute('disabled', 'true');\n      return alert('Please choose a date in the future');\n    }\n    userSelectedDate = data.getTime();\n    btn.removeAttribute('disabled');\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  console.log({ days, hours, minutes, seconds });\n  return { days, hours, minutes, seconds };\n}\n\nbtn.addEventListener('click', handleClick);\nfunction handleClick(event) {\n  btn.setAttribute('disabled', 'true');\n  input.setAttribute('disabled', 'true');\n\n  let remainderMs = userSelectedDate - Date.now();\n\n  let timerId = setInterval(\n    () => {\n      // debugger;\n      if (remainderMs <= 0) {\n        clearInterval(timerId);\n        btn.removeAttribute('disabled');\n        input.removeAttribute('disabled');\n      } else {\n        const obj = convertMs(remainderMs);\n        makeTimerContent(obj);\n        remainderMs -= 1000;\n        console.log(remainderMs);\n      }\n    },\n    1000,\n    remainderMs\n  );\n}\n\nfunction addZero(value) {\n  return `${value}`.padStart(2, '0');\n}\n\nfunction makeTimerContent({ days, hours, minutes, seconds }) {\n  secondTimer.textContent = addZero(seconds);\n}\n"],"names":["btn","input","secondTimer","userSelectedDate","options","selectedDates","data","flatpickr","convertMs","ms","days","hours","minutes","seconds","handleClick","event","remainderMs","timerId","obj","makeTimerContent","addZero","value"],"mappings":"qxBAGA,MAAMA,EAAM,SAAS,cAAc,QAAQ,EACrCC,EAAQ,SAAS,cAAc,OAAO,EAC1B,SAAS,cAAc,aAAa,EACtD,MAAMC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,SAASC,EAAe,CACtB,MAAMC,EAAO,IAAI,KAAKD,EAAc,CAAC,CAAC,EACtC,GAAIC,EAAK,QAAO,GAAM,KAAK,IAAG,EAC5B,OAAAN,EAAI,aAAa,WAAY,MAAM,EAC5B,MAAM,oCAAoC,EAEnDG,EAAmBG,EAAK,UACxBN,EAAI,gBAAgB,UAAU,CAC/B,CACH,EAEAO,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,eAAQ,IAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAAE,EACtC,CAAE,KAAAH,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAb,EAAI,iBAAiB,QAASc,CAAW,EACzC,SAASA,EAAYC,EAAO,CAC1Bf,EAAI,aAAa,WAAY,MAAM,EACnCC,EAAM,aAAa,WAAY,MAAM,EAErC,IAAIe,EAAcb,EAAmB,KAAK,IAAG,EAEzCc,EAAU,YACZ,IAAM,CAEJ,GAAID,GAAe,EACjB,cAAcC,CAAO,EACrBjB,EAAI,gBAAgB,UAAU,EAC9BC,EAAM,gBAAgB,UAAU,MAC3B,CACL,MAAMiB,EAAMV,EAAUQ,CAAW,EACjCG,EAAiBD,CAAG,EACpBF,GAAe,IACf,QAAQ,IAAIA,CAAW,CACxB,CACF,EACD,IACAA,CACJ,CACA,CAEA,SAASI,EAAQC,EAAO,CACtB,MAAO,GAAGA,CAAK,GAAG,SAAS,EAAG,GAAG,CACnC,CAEA,SAASF,EAAiB,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC3DX,EAAY,YAAckB,EAAQP,CAAO,CAC3C"}